# Generated by Django 5.1.3 on 2024-11-28 04:19

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Lapangan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nama', models.CharField(max_length=100)),
                ('deskripsi', models.TextField(max_length=500)),
                ('harga_per_jam', models.DecimalField(decimal_places=2, max_digits=10)),
                ('gambar', models.ImageField(blank=True, null=True, upload_to='lapangan_images/')),
                ('is_available', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('bio', models.TextField(blank=True, max_length=500, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Jadwal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tanggal', models.DateField()),
                ('jam_mulai', models.TimeField()),
                ('jam_selesai', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('lapangan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='xarena_app.lapangan')),
            ],
        ),
        migrations.CreateModel(
            name='Pemesanan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metode_pembayaran', models.CharField(choices=[('transfer', 'Transfer Bank'), ('cash', 'Cash')], default='transfer', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('diterima', 'Diterima'), ('selesai', 'Selesai'), ('dibatalkan', 'Dibatalkan')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('jadwal', models.ForeignKey(help_text='Jadwal pemesanan', on_delete=django.db.models.deletion.CASCADE, to='xarena_app.jadwal')),
                ('staff', models.ForeignKey(blank=True, help_text='Staff yang memproses pemesanan', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pemesanan_staff', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(help_text='User yang melakukan pemesanan', on_delete=django.db.models.deletion.CASCADE, related_name='pemesanan_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ulasan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField()),
                ('komentar', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lapangan', models.ForeignKey(help_text='Lapangan yang diulas', on_delete=django.db.models.deletion.CASCADE, to='xarena_app.lapangan')),
                ('user', models.ForeignKey(help_text='User yang memberikan ulasan', on_delete=django.db.models.deletion.CASCADE, related_name='ulasan_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
